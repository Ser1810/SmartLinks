name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d --build

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until docker exec postgres_with_restore pg_isready -U puser; do
            sleep 1
          done
          echo "PostgreSQL is ready."

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x' # или нужная версия .NET SDK

      - name: Restore and build solution
        run: |
          # Замените на название вашего решения (.sln)
          dotnet restore SmartLinks.sln
          dotnet build SmartLinks.sln --no-restore --configuration Release

      - name: Run tests
        run: |
          # Запускаем тесты проекта на C#
          
          # Предположим, что тестовые проекты находятся в папке Tests/
          
          dotnet test Tests/ --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"

      - name: Upload test results (опционально)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: "./TestResults/test_results.trx"

      - name: Tear down services
        if: always()
        run: |
          docker-compose down --volumes